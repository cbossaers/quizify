CREATE TABLE entidad (
    correo VARCHAR(256) PRIMARY KEY,
    tipo VARCHAR(16) NOT NULL
);

CREATE TABLE alumno (
    correo VARCHAR(256) PRIMARY KEY,
    contraseña VARCHAR(32) NOT NULL,
    nombre VARCHAR(128) NOT NULL,
    apellidos VARCHAR(256) NOT NULL,
    FOREIGN KEY (correo) REFERENCES entidad(correo) ON DELETE CASCADE
);

CREATE TABLE profesor (
    correo VARCHAR(256) PRIMARY KEY,
    contraseña VARCHAR(32) NOT NULL,
    nombre VARCHAR(128) NOT NULL,
    apellidos VARCHAR(256) NOT NULL,
    almacenamiento FLOAT NOT NULL,
    quizes INTEGER NOT NULL,
    FOREIGN KEY (correo) REFERENCES entidad(correo) ON DELETE CASCADE
);

CREATE TABLE institucion (
    correo VARCHAR(256) PRIMARY KEY,
    contraseña VARCHAR(32) NOT NULL,
    nombre VARCHAR(128) NOT NULL,
    quizes INTEGER NOT NULL,
    FOREIGN KEY (correo) REFERENCES entidad(correo) ON DELETE CASCADE
);

CREATE TABLE pregunta (
    id INTEGER NOT NULL,
    ver INTEGER NOT NULL,
    enunciado VARCHAR(512) NOT NULL,
    tipo VARCHAR(16) NOT NULL,
    PRIMARY KEY (id, ver)
);

CREATE TABLE pregunta_vf (
    id INTEGER NOT NULL,
    ver INTEGER NOT NULL,
    correcta INTEGER NOT null,
    PRIMARY KEY (id, ver),
    FOREIGN KEY (id, ver) REFERENCES pregunta(id, ver) ON DELETE CASCADE
);

CREATE TABLE pregunta_test (
    id INTEGER NOT NULL,
    ver INTEGER NOT NULL,
    opc_a VARCHAR(256) NOT NULL,
    opc_b VARCHAR(256) NOT NULL,
    opc_c varchar(256) NOT NULL,
    opc_d varchar(256),
    opc_e varchar(256),
    correcta INTEGER NOT NULL,
    PRIMARY KEY (id, ver),
    FOREIGN KEY (id, ver) REFERENCES pregunta(id, ver) ON DELETE CASCADE
);

CREATE TABLE pregunta_desarrollo (
    id INTEGER NOT NULL,
    ver INTEGER NOT NULL,
    PRIMARY KEY (id, ver),
    FOREIGN KEY (id, ver) REFERENCES pregunta(id, ver) ON DELETE CASCADE
);

CREATE TABLE examen (
    id INTEGER PRIMARY KEY,
    titulo VARCHAR(256) NOT NULL,
    descripcion VARCHAR(512) NOT NULL,
    autor VARCHAR(256),
    curso VARCHAR(32) NOT NULL,
    tiempo INTEGER,
    fecha_ini DATETIME NOT NULL,
    fecha_fin DATETIME NOT NULL,
    intentos INTEGER NOT NULL,
    CT VARCHAR(32),
    volver_atras INTEGER NOT NULL,
    errores_restan INTEGER NOT NULL,
    mostrar_resultados INTEGER NOT NULL,
    FOREIGN KEY (autor) REFERENCES profesor(correo) ON DELETE SET NULL
);

CREATE TABLE lista_preguntas (
    id_examen INTEGER NOT NULL,
    id_pregunta INTEGER NOT NULL,
    ver_pregunta INTEGER NOT NULL,
    puntuacion INTEGER NOT NULL,
    PRIMARY KEY (id_examen, id_pregunta),
    FOREIGN KEY (id_examen) REFERENCES examen(id),
    FOREIGN KEY (id_pregunta, ver_pregunta) REFERENCES pregunta(id, ver) ON DELETE CASCADE
);

CREATE TABLE notas_examenes (
    alumno VARCHAR(256) NOT NULL,
    examen INTEGER NOT NULL,
    nota FLOAT NOT NULL,
    PRIMARY KEY (alumno, examen),
    FOREIGN KEY (alumno) REFERENCES alumno(correo) ON DELETE CASCADE,
    FOREIGN KEY (examen) REFERENCES examen(id) ON DELETE CASCADE
);

CREATE TABLE respuestas_examenes (
    examen INTEGER NOT NULL,
    alumno VARCHAR(256) NOT NULL,
    pregunta INTEGER NOT NULL,
    ver_pregunta INTEGER NOT NULL,
    respuesta VARCHAR(512) NOT NULL,
    PRIMARY KEY (examen, alumno, pregunta, ver_pregunta),
    FOREIGN KEY (examen) REFERENCES examen(id) ON DELETE CASCADE,
    FOREIGN KEY (alumno) REFERENCES alumno(correo) ON DELETE CASCADE,
    FOREIGN KEY (pregunta, ver_pregunta) REFERENCES pregunta(id, ver) ON DELETE CASCADE
);
ALTER TABLE pregunta ADD COLUMN dificultad INTEGER NOT NULL;

CREATE TABLE cursos (
    codigo VARCHAR(8) NOT NULL,
    nombre VARCHAR(128) NOT NULL,
    profesor VARCHAR(256) NOT NULL,
    PRIMARY KEY (codigo,profesor),
    FOREIGN KEY (profesor) REFERENCES profesor(correo) ON DELETE CASCADE
);

CREATE TABLE alumno_curso (
    alumno VARCHAR(256),
    curso VARCHAR(8),
    PRIMARY KEY (alumno, curso),
    FOREIGN KEY (alumno) REFERENCES alumno(correo) ON DELETE CASCADE,
    FOREIGN KEY (curso) REFERENCES cursos(codigo) ON DELETE CASCADE
);